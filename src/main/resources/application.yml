spring:
  application:
    name: vg-ms-person

  r2dbc:
    # Conexión a bd Person
    url: r2dbc:postgresql://ep-morning-cake-a46o3cf8-pooler.us-east-1.aws.neon.tech:5432/neondb?sslmode=require
    username: neondb_owner
    password: npg_tGu4yQWLh9jb
    pool:
      max-size: 20
      min-size: 5
      validation-query: SELECT 1

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS} # pkc-p11xm.us-east-1.aws.confluent.cloud:9092
    consumer:
      group-id: person-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: pe.edu.vallegrande.database.event
        security.protocol: SASL_SSL
        sasl.mechanism: PLAIN
        sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_USERNAME}" password="${KAFKA_PASSWORD}";
        #sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="ZOIIGPQD6OCOVHCZ" password="Xdy9C0r1SLJ3TY0emLqgqhWa3JEvn9Qr2meiJi4aQItksjotxGS2y02cTwM2c4rT";

  family:
    service-url: ${FAMILY_SERVICE_URL} # https://humble-fortnight-5gx4qp46qj672vg5r-8081.app.github.dev

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://securetoken.google.com/security-prs1

logging:
  level:
    io.r2dbc: DEBUG
    org.springframework.r2dbc: DEBUG

  # Configuración de tiempo de espera
  datasource:
    initialization-mode: always
    initialization-timeout: 10s

server:
  port: 8082

management:
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
